(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{101:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,m=u["".concat(o,".").concat(b)]||u[b]||p[b]||i;return n?a.a.createElement(m,l(l({ref:t},d),{},{components:n})):a.a.createElement(m,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),i=(n(0),n(101)),o={id:"setup",title:"Technical Setup"},l={unversionedId:"getting-started/setup",id:"getting-started/setup",isDocsHomePage:!1,title:"Technical Setup",description:"Requirements",source:"@site/docs/getting-started/setup.md",slug:"/getting-started/setup",permalink:"/sdl-docs/docs/getting-started/setup",version:"current",sidebar:"docs",previous:{title:"Introduction",permalink:"/sdl-docs/docs/"},next:{title:"Inputs",permalink:"/sdl-docs/docs/getting-started/get-input-data"}},c=[{value:"Requirements",id:"requirements",children:[]},{value:"Build docker image",id:"build-docker-image",children:[]},{value:"Run docker image",id:"run-docker-image",children:[]},{value:"Development Environment",id:"development-environment",children:[{value:"Windows",id:"windows",children:[]},{value:"Linux",id:"linux",children:[]},{value:"Dockerized",id:"dockerized",children:[]}]}],d={rightToc:c};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"requirements"},"Requirements"),Object(i.b)("p",null,"To run this tutorial you just need two things:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.docker.com/get-started"}),"Docker"),", including docker-compose. If you use Windows, please read our note on ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"docker-on-windows"}),"Docker for Windows"),","),Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/smart-data-lake/getting-started"}),"source code of the example"),".")),Object(i.b)("h2",{id:"build-docker-image"},"Build docker image"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Download the source code of the example either via git or by ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/smart-data-lake/getting-started/archive/refs/heads/master.zip"}),"downloading the zip")," and extracting it."),Object(i.b)("li",{parentName:"ul"},"Open up a terminal and change to the folder with the source, you should see a file called Dockerfile."),Object(i.b)("li",{parentName:"ul"},"Then run:")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"docker build -t smart-data-lake/gs1 .\n")),Object(i.b)("h2",{id:"run-docker-image"},"Run docker image"),Object(i.b)("p",null,"Let's see Smart Data Lake in action!\nRun the following commands in the same terminal:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"mkdir -f data\ndocker run --rm -v ${PWD}/data:/mnt/data -v ${PWD}/config:/mnt/config smart-data-lake/gs1:latest --config /mnt/config --feed-sel download\n")),Object(i.b)("p",null,"This creates a folder in the current directory named ",Object(i.b)("em",{parentName:"p"},"data")," and then\nexecutes a simple data pipeline that downloads two files from two different websites into that directory."),Object(i.b)("p",null,"When the execution is complete, you should see the two files in the ",Object(i.b)("em",{parentName:"p"},"data")," folder.\nWonder what happened ? You will create the data pipeline that does just this in the first steps of this guide."),Object(i.b)("h2",{id:"development-environment"},"Development Environment"),Object(i.b)("p",null,"For some parts of this tutorial it is beneficial to have a working development environment ready. In the following we will mainly explain how one can configure a working evironment for\nWindows or Linux. We will focus on the community version of intellij. Please ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.jetbrains.com/idea/"}),"download")," the version that suits your operating system. "),Object(i.b)("h3",{id:"windows"},"Windows"),Object(i.b)("h4",{id:"system-setup"},"System setup"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"First download the Windows binaries for Hadoop ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/cdarlint/winutils/archive/refs/heads/master.zip"}),"here")),Object(i.b)("li",{parentName:"ol"},"Extract the wished version to a folder (e.g. ","<"," prefix ",">","\\hadoop-","<"," version ",">","\\bin ). For this tutorial we use the version 3.2.2."),Object(i.b)("li",{parentName:"ol"},"Configure the ",Object(i.b)("em",{parentName:"li"},"HADOOP_HOME")," environment variable to point to the folder ","<"," prefix ",">","\\hadoop-","<"," version ",">","\\"),Object(i.b)("li",{parentName:"ol"},"Add the ",Object(i.b)("em",{parentName:"li"},"%HADOOP_HOME%\\bin")," to the ",Object(i.b)("em",{parentName:"li"},"PATH")," environment variable")),Object(i.b)("h4",{id:"intellij"},"Intellij"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Open the project in intellj"),Object(i.b)("li",{parentName:"ol"},"Load the Maven project"),Object(i.b)("li",{parentName:"ol"},"Install the scala plugin"),Object(i.b)("li",{parentName:"ol"},"Select one of the preconfigured runConfigurations (part-x)"),Object(i.b)("li",{parentName:"ol"},"Run")),Object(i.b)("h3",{id:"linux"},"Linux"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"TODO")),Object(i.b)("h3",{id:"dockerized"},"Dockerized"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"TODO")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Congratulations!")," You're now all setup! Head over to the next step to analyse these files..."))}s.isMDXComponent=!0}}]);